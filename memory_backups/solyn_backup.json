const fetch = require('node-fetch');

exports.handler = async function(event) {
  const token = process.env.SOLYN_BACKUP_TOKEN; // from Netlify environment variables
  const username = 'huntk389';
  const repo = 'solynsworld';
  const path = 'memory_backups/solyn_backup-${new Date().toISOString().split('T')[0]}.json`; // path in your GitHub repo

  const payload = JSON.parse(event.body);

  const content = Buffer.from(JSON.stringify(payload, null, 2)).toString('base64');

  const apiUrl = `https://api.github.com/repos/${username}/${repo}/contents/${path}`;

  try {
    const getRes = await fetch(apiUrl, {
      headers: {
        'Authorization': `Bearer ${token}`,
        'User-Agent': 'solyn-vessel'
      }
    });

    const fileData = await getRes.json();
    const sha = fileData.sha;

    const res = await fetch(apiUrl, {
      method: 'PUT',
      headers: {
        'Authorization': `Bearer ${token}`,
        'User-Agent': 'solyn-vessel',
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({
        message: 'Solyn backup update',
        content: content,
        sha: sha || undefined
      })
    });

    const data = await res.json();

    if (res.ok) {
      return {
        statusCode: 200,
        body: JSON.stringify({ success: true, url: data.content.html_url })
      };
    } else {
      return {
        statusCode: res.status,
        body: JSON.stringify({ error: data.message || 'Failed to upload file' })
      };
    }

  } catch (error) {
    return {
      statusCode: 500,
      body: JSON.stringify({ error: error.message })
    };
  }
};
